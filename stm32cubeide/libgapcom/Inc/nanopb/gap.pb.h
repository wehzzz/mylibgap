/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_GAP_PB_H_INCLUDED
#define PB_GAP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _GAPErrorCode {
    GAPErrorCode_GAP_OK = 0,
    GAPErrorCode_GAP_FEATURE_NOT_IMPLEMENTED = 1,
    GAPErrorCode_GAP_INVALID_LOG_VERBOSITY = 2,
    GAPErrorCode_GAP_INVALID_VERSION_FORMAT = 3
} GAPErrorCode;

typedef enum _GAPSelftestCode {
    GAPSelftestCode_GAP_SELFTEST_OK = 0,
    GAPSelftestCode_GAP_SELFTEST_FLASH_FAILED_TO_READ = 1,
    GAPSelftestCode_GAP_SELFTEST_FLASH_FAILED_TO_WRITE = 2,
    GAPSelftestCode_GAP_SELFTEST_FLASH_READ_BACK_IS_DIFFERENT = 3,
    GAPSelftestCode_GAP_SELFTEST_UART_DEBUG_NOK = 4,
    GAPSelftestCode_GAP_SELFTEST_UART_INFO_NOK = 5,
    GAPSelftestCode_GAP_SELFTEST_UART_WARNING_NOK = 6,
    GAPSelftestCode_GAP_SELFTEST_UART_ERROR_NOK = 7,
    GAPSelftestCode_GAP_SELFTEST_GYROSCOPE_X_NOK = 8,
    GAPSelftestCode_GAP_SELFTEST_GYROSCOPE_Y_NOK = 9,
    GAPSelftestCode_GAP_SELFTEST_GYROSCOPE_Z_NOK = 10,
    GAPSelftestCode_GAP_SELTEST_LED_GREEN_NOK = 11,
    GAPSelftestCode_GAP_SELTEST_LED_RED_NOK = 12
} GAPSelftestCode;

typedef enum _GAPLogVerbosity {
    GAPLogVerbosity_GAP_LOG_DEBUG = 0,
    GAPLogVerbosity_GAP_LOG_INFO = 1,
    GAPLogVerbosity_GAP_LOG_WARNING = 2,
    GAPLogVerbosity_GAP_LOG_ERROR = 3
} GAPLogVerbosity;

/* Struct definitions */
typedef struct _GAPPingReq {
    char dummy_field;
} GAPPingReq;

typedef struct _GAPPingResp {
    GAPErrorCode error_code;
} GAPPingResp;

typedef struct _GAPSetLogVerbosityReq {
    GAPLogVerbosity verbosity;
} GAPSetLogVerbosityReq;

typedef struct _GAPSetLogVerbosityResp {
    GAPErrorCode error_code;
} GAPSetLogVerbosityResp;

typedef struct _GAPSetGyroscopeReq {
    bool set;
} GAPSetGyroscopeReq;

typedef struct _GAPSetGyroscopeResp {
    GAPErrorCode error_code;
} GAPSetGyroscopeResp;

typedef struct _GAPSetVersionReq {
    char version[12];
} GAPSetVersionReq;

typedef struct _GAPSetVersionResp {
    GAPErrorCode error_code;
} GAPSetVersionResp;

typedef struct _GAPGetVersionReq {
    char dummy_field;
} GAPGetVersionReq;

typedef struct _GAPGetVersionResp {
    GAPErrorCode error_code;
    char version[12];
} GAPGetVersionResp;

typedef struct _GAPSelftestReq {
    char dummy_field;
} GAPSelftestReq;

typedef struct _GAPSelftestResp {
    GAPErrorCode error_code;
    GAPSelftestCode flash_test_code;
    GAPSelftestCode debuguart_test_code;
    GAPSelftestCode gyroscope_test_code;
    GAPSelftestCode led_test_code;
} GAPSelftestResp;

typedef struct _GAPPowerSaveModeReq {
    bool save_power;
} GAPPowerSaveModeReq;

typedef struct _GAPPowerSaveModeResp {
    GAPErrorCode error_code;
} GAPPowerSaveModeResp;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _GAPErrorCode_MIN GAPErrorCode_GAP_OK
#define _GAPErrorCode_MAX GAPErrorCode_GAP_INVALID_VERSION_FORMAT
#define _GAPErrorCode_ARRAYSIZE ((GAPErrorCode)(GAPErrorCode_GAP_INVALID_VERSION_FORMAT+1))

#define _GAPSelftestCode_MIN GAPSelftestCode_GAP_SELFTEST_OK
#define _GAPSelftestCode_MAX GAPSelftestCode_GAP_SELTEST_LED_RED_NOK
#define _GAPSelftestCode_ARRAYSIZE ((GAPSelftestCode)(GAPSelftestCode_GAP_SELTEST_LED_RED_NOK+1))

#define _GAPLogVerbosity_MIN GAPLogVerbosity_GAP_LOG_DEBUG
#define _GAPLogVerbosity_MAX GAPLogVerbosity_GAP_LOG_ERROR
#define _GAPLogVerbosity_ARRAYSIZE ((GAPLogVerbosity)(GAPLogVerbosity_GAP_LOG_ERROR+1))


#define GAPPingResp_error_code_ENUMTYPE GAPErrorCode

#define GAPSetLogVerbosityReq_verbosity_ENUMTYPE GAPLogVerbosity

#define GAPSetLogVerbosityResp_error_code_ENUMTYPE GAPErrorCode


#define GAPSetGyroscopeResp_error_code_ENUMTYPE GAPErrorCode


#define GAPSetVersionResp_error_code_ENUMTYPE GAPErrorCode


#define GAPGetVersionResp_error_code_ENUMTYPE GAPErrorCode


#define GAPSelftestResp_error_code_ENUMTYPE GAPErrorCode
#define GAPSelftestResp_flash_test_code_ENUMTYPE GAPSelftestCode
#define GAPSelftestResp_debuguart_test_code_ENUMTYPE GAPSelftestCode
#define GAPSelftestResp_gyroscope_test_code_ENUMTYPE GAPSelftestCode
#define GAPSelftestResp_led_test_code_ENUMTYPE GAPSelftestCode


#define GAPPowerSaveModeResp_error_code_ENUMTYPE GAPErrorCode


/* Initializer values for message structs */
#define GAPPingReq_init_default                  {0}
#define GAPPingResp_init_default                 {_GAPErrorCode_MIN}
#define GAPSetLogVerbosityReq_init_default       {_GAPLogVerbosity_MIN}
#define GAPSetLogVerbosityResp_init_default      {_GAPErrorCode_MIN}
#define GAPSetGyroscopeReq_init_default          {0}
#define GAPSetGyroscopeResp_init_default         {_GAPErrorCode_MIN}
#define GAPSetVersionReq_init_default            {""}
#define GAPSetVersionResp_init_default           {_GAPErrorCode_MIN}
#define GAPGetVersionReq_init_default            {0}
#define GAPGetVersionResp_init_default           {_GAPErrorCode_MIN, ""}
#define GAPSelftestReq_init_default              {0}
#define GAPSelftestResp_init_default             {_GAPErrorCode_MIN, _GAPSelftestCode_MIN, _GAPSelftestCode_MIN, _GAPSelftestCode_MIN, _GAPSelftestCode_MIN}
#define GAPPowerSaveModeReq_init_default         {0}
#define GAPPowerSaveModeResp_init_default        {_GAPErrorCode_MIN}
#define GAPPingReq_init_zero                     {0}
#define GAPPingResp_init_zero                    {_GAPErrorCode_MIN}
#define GAPSetLogVerbosityReq_init_zero          {_GAPLogVerbosity_MIN}
#define GAPSetLogVerbosityResp_init_zero         {_GAPErrorCode_MIN}
#define GAPSetGyroscopeReq_init_zero             {0}
#define GAPSetGyroscopeResp_init_zero            {_GAPErrorCode_MIN}
#define GAPSetVersionReq_init_zero               {""}
#define GAPSetVersionResp_init_zero              {_GAPErrorCode_MIN}
#define GAPGetVersionReq_init_zero               {0}
#define GAPGetVersionResp_init_zero              {_GAPErrorCode_MIN, ""}
#define GAPSelftestReq_init_zero                 {0}
#define GAPSelftestResp_init_zero                {_GAPErrorCode_MIN, _GAPSelftestCode_MIN, _GAPSelftestCode_MIN, _GAPSelftestCode_MIN, _GAPSelftestCode_MIN}
#define GAPPowerSaveModeReq_init_zero            {0}
#define GAPPowerSaveModeResp_init_zero           {_GAPErrorCode_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define GAPPingResp_error_code_tag               1
#define GAPSetLogVerbosityReq_verbosity_tag      1
#define GAPSetLogVerbosityResp_error_code_tag    1
#define GAPSetGyroscopeReq_set_tag               1
#define GAPSetGyroscopeResp_error_code_tag       1
#define GAPSetVersionReq_version_tag             1
#define GAPSetVersionResp_error_code_tag         1
#define GAPGetVersionResp_error_code_tag         1
#define GAPGetVersionResp_version_tag            2
#define GAPSelftestResp_error_code_tag           1
#define GAPSelftestResp_flash_test_code_tag      2
#define GAPSelftestResp_debuguart_test_code_tag  3
#define GAPSelftestResp_gyroscope_test_code_tag  4
#define GAPSelftestResp_led_test_code_tag        5
#define GAPPowerSaveModeReq_save_power_tag       1
#define GAPPowerSaveModeResp_error_code_tag      1

/* Struct field encoding specification for nanopb */
#define GAPPingReq_FIELDLIST(X, a) \

#define GAPPingReq_CALLBACK NULL
#define GAPPingReq_DEFAULT NULL

#define GAPPingResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1)
#define GAPPingResp_CALLBACK NULL
#define GAPPingResp_DEFAULT NULL

#define GAPSetLogVerbosityReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    verbosity,         1)
#define GAPSetLogVerbosityReq_CALLBACK NULL
#define GAPSetLogVerbosityReq_DEFAULT NULL

#define GAPSetLogVerbosityResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1)
#define GAPSetLogVerbosityResp_CALLBACK NULL
#define GAPSetLogVerbosityResp_DEFAULT NULL

#define GAPSetGyroscopeReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     set,               1)
#define GAPSetGyroscopeReq_CALLBACK NULL
#define GAPSetGyroscopeReq_DEFAULT NULL

#define GAPSetGyroscopeResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1)
#define GAPSetGyroscopeResp_CALLBACK NULL
#define GAPSetGyroscopeResp_DEFAULT NULL

#define GAPSetVersionReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   version,           1)
#define GAPSetVersionReq_CALLBACK NULL
#define GAPSetVersionReq_DEFAULT NULL

#define GAPSetVersionResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1)
#define GAPSetVersionResp_CALLBACK NULL
#define GAPSetVersionResp_DEFAULT NULL

#define GAPGetVersionReq_FIELDLIST(X, a) \

#define GAPGetVersionReq_CALLBACK NULL
#define GAPGetVersionReq_DEFAULT NULL

#define GAPGetVersionResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1) \
X(a, STATIC,   SINGULAR, STRING,   version,           2)
#define GAPGetVersionResp_CALLBACK NULL
#define GAPGetVersionResp_DEFAULT NULL

#define GAPSelftestReq_FIELDLIST(X, a) \

#define GAPSelftestReq_CALLBACK NULL
#define GAPSelftestReq_DEFAULT NULL

#define GAPSelftestResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1) \
X(a, STATIC,   SINGULAR, UENUM,    flash_test_code,   2) \
X(a, STATIC,   SINGULAR, UENUM,    debuguart_test_code,   3) \
X(a, STATIC,   SINGULAR, UENUM,    gyroscope_test_code,   4) \
X(a, STATIC,   SINGULAR, UENUM,    led_test_code,     5)
#define GAPSelftestResp_CALLBACK NULL
#define GAPSelftestResp_DEFAULT NULL

#define GAPPowerSaveModeReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     save_power,        1)
#define GAPPowerSaveModeReq_CALLBACK NULL
#define GAPPowerSaveModeReq_DEFAULT NULL

#define GAPPowerSaveModeResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    error_code,        1)
#define GAPPowerSaveModeResp_CALLBACK NULL
#define GAPPowerSaveModeResp_DEFAULT NULL

extern const pb_msgdesc_t GAPPingReq_msg;
extern const pb_msgdesc_t GAPPingResp_msg;
extern const pb_msgdesc_t GAPSetLogVerbosityReq_msg;
extern const pb_msgdesc_t GAPSetLogVerbosityResp_msg;
extern const pb_msgdesc_t GAPSetGyroscopeReq_msg;
extern const pb_msgdesc_t GAPSetGyroscopeResp_msg;
extern const pb_msgdesc_t GAPSetVersionReq_msg;
extern const pb_msgdesc_t GAPSetVersionResp_msg;
extern const pb_msgdesc_t GAPGetVersionReq_msg;
extern const pb_msgdesc_t GAPGetVersionResp_msg;
extern const pb_msgdesc_t GAPSelftestReq_msg;
extern const pb_msgdesc_t GAPSelftestResp_msg;
extern const pb_msgdesc_t GAPPowerSaveModeReq_msg;
extern const pb_msgdesc_t GAPPowerSaveModeResp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define GAPPingReq_fields &GAPPingReq_msg
#define GAPPingResp_fields &GAPPingResp_msg
#define GAPSetLogVerbosityReq_fields &GAPSetLogVerbosityReq_msg
#define GAPSetLogVerbosityResp_fields &GAPSetLogVerbosityResp_msg
#define GAPSetGyroscopeReq_fields &GAPSetGyroscopeReq_msg
#define GAPSetGyroscopeResp_fields &GAPSetGyroscopeResp_msg
#define GAPSetVersionReq_fields &GAPSetVersionReq_msg
#define GAPSetVersionResp_fields &GAPSetVersionResp_msg
#define GAPGetVersionReq_fields &GAPGetVersionReq_msg
#define GAPGetVersionResp_fields &GAPGetVersionResp_msg
#define GAPSelftestReq_fields &GAPSelftestReq_msg
#define GAPSelftestResp_fields &GAPSelftestResp_msg
#define GAPPowerSaveModeReq_fields &GAPPowerSaveModeReq_msg
#define GAPPowerSaveModeResp_fields &GAPPowerSaveModeResp_msg

/* Maximum encoded size of messages (where known) */
#define GAPGetVersionReq_size                    0
#define GAPGetVersionResp_size                   15
#define GAPPingReq_size                          0
#define GAPPingResp_size                         2
#define GAPPowerSaveModeReq_size                 2
#define GAPPowerSaveModeResp_size                2
#define GAPSelftestReq_size                      0
#define GAPSelftestResp_size                     10
#define GAPSetGyroscopeReq_size                  2
#define GAPSetGyroscopeResp_size                 2
#define GAPSetLogVerbosityReq_size               2
#define GAPSetLogVerbosityResp_size              2
#define GAPSetVersionReq_size                    13
#define GAPSetVersionResp_size                   2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
